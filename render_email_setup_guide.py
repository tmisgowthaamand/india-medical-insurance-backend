#!/usr/bin/env python3
"""
Render Email Setup Guide for MediCare+ Platform
Quick setup instructions for email providers that work on Render
"""

def show_render_email_setup():
    """Show comprehensive setup guide for Render email"""
    print("🚀 RENDER EMAIL SETUP GUIDE - MediCare+ Platform")
    print("="*80)
    print()
    print("❌ PROBLEM: Gmail SMTP ports (587, 465, 25) are BLOCKED on Render")
    print("✅ SOLUTION: Use HTTP-based email providers instead")
    print()
    print("="*80)
    print("📧 RECOMMENDED EMAIL PROVIDERS")
    print("="*80)
    print()
    
    # SendGrid Setup
    print("🥇 OPTION 1: SendGrid (RECOMMENDED)")
    print("-" * 50)
    print("✅ Free tier: 100 emails/day")
    print("✅ Reliable delivery")
    print("✅ Easy setup")
    print()
    print("Setup Steps:")
    print("1. Go to https://sendgrid.com")
    print("2. Sign up for free account")
    print("3. Go to Settings > API Keys")
    print("4. Create new API key with 'Mail Send' permissions")
    print("5. Copy the API key")
    print("6. In Render dashboard, add environment variable:")
    print("   SENDGRID_API_KEY=your_api_key_here")
    print("7. Deploy your service")
    print()
    
    # Mailgun Setup
    print("🥈 OPTION 2: Mailgun")
    print("-" * 50)
    print("✅ Free tier: 5000 emails/month")
    print("✅ Good for high volume")
    print()
    print("Setup Steps:")
    print("1. Go to https://mailgun.com")
    print("2. Sign up for free account")
    print("3. Go to Domains > Add New Domain (or use sandbox)")
    print("4. Get API key from Settings > API Keys")
    print("5. In Render dashboard, add environment variables:")
    print("   MAILGUN_API_KEY=your_api_key_here")
    print("   MAILGUN_DOMAIN=your_domain_here")
    print("6. Deploy your service")
    print()
    
    # EmailJS Setup
    print("🥉 OPTION 3: EmailJS (Frontend-based)")
    print("-" * 50)
    print("✅ Free tier: 200 emails/month")
    print("✅ No backend required")
    print()
    print("Setup Steps:")
    print("1. Go to https://emailjs.com")
    print("2. Sign up and create email service")
    print("3. Create email template")
    print("4. Get Service ID, Template ID, and User ID")
    print("5. In Render dashboard, add environment variables:")
    print("   EMAILJS_SERVICE_ID=your_service_id")
    print("   EMAILJS_TEMPLATE_ID=your_template_id")
    print("   EMAILJS_USER_ID=your_user_id")
    print("6. Deploy your service")
    print()
    
    # Fallback Option
    print("🔄 FALLBACK: Local Storage")
    print("-" * 50)
    print("✅ Always available")
    print("✅ Stores emails for manual sending")
    print()
    print("How it works:")
    print("1. Emails are saved to pending_emails.json")
    print("2. You can manually send them later")
    print("3. User emails are still stored in user_emails.json")
    print("4. No additional setup required")
    print()
    
    print("="*80)
    print("🔧 RENDER DEPLOYMENT STEPS")
    print("="*80)
    print()
    print("1. Choose one of the email providers above")
    print("2. Get the required API keys/credentials")
    print("3. In Render dashboard:")
    print("   - Go to your backend service")
    print("   - Click 'Environment' tab")
    print("   - Add the environment variables")
    print("   - Click 'Save Changes'")
    print("4. Your service will automatically redeploy")
    print("5. Test email functionality from your frontend")
    print()
    
    print("="*80)
    print("✅ VERIFICATION")
    print("="*80)
    print()
    print("After deployment, check:")
    print("1. Service logs show: 'Available Providers: [SendGrid]' (or your chosen provider)")
    print("2. Test email endpoint returns success")
    print("3. Users receive emails in their Gmail inbox")
    print("4. No more 'SMTP ports blocked' errors")
    print()
    
    print("="*80)
    print("🆘 TROUBLESHOOTING")
    print("="*80)
    print()
    print("If emails still don't work:")
    print("1. Check Render service logs for errors")
    print("2. Verify environment variables are set correctly")
    print("3. Test API keys in provider dashboard")
    print("4. Check email provider quotas/limits")
    print("5. Look for emails in spam folder")
    print()
    print("Common issues:")
    print("- Invalid API key: Check provider dashboard")
    print("- Quota exceeded: Upgrade plan or wait for reset")
    print("- Domain not verified: Complete domain verification")
    print("- Template issues: Check EmailJS template configuration")
    print()
    
    print("="*80)
    print("📞 SUPPORT")
    print("="*80)
    print()
    print("If you need help:")
    print("1. Check service logs in Render dashboard")
    print("2. Test with /test-email endpoint")
    print("3. Verify provider setup in their dashboard")
    print("4. Check pending_emails.json for stored emails")
    print()
    print("🎉 Once configured, email functionality will work reliably on Render!")

if __name__ == "__main__":
    show_render_email_setup()
