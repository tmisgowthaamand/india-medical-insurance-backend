#!/usr/bin/env python3
"""
Test Real Email Sending
Verifies that Gmail SMTP is actually sending real emails
"""

import os
import sys
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

def test_gmail_smtp_directly():
    """Test Gmail SMTP directly"""
    
    print("📧 Testing Gmail SMTP Directly")
    print("=" * 50)
    
    gmail_email = os.getenv("GMAIL_EMAIL")
    gmail_password = os.getenv("GMAIL_APP_PASSWORD")
    
    print(f"Gmail Email: {gmail_email}")
    print(f"Gmail App Password: {'*' * len(gmail_password) if gmail_password else 'Not set'}")
    
    if not gmail_email or not gmail_password:
        print("❌ Gmail credentials not configured")
        return False
    
    try:
        import smtplib
        import ssl
        from email.mime.text import MIMEText
        from email.mime.multipart import MIMEMultipart
        from datetime import datetime
        
        # Create test email
        msg = MIMEMultipart()
        msg['From'] = f"MediCare+ Platform <{gmail_email}>"
        msg['To'] = "gowthaamankrishna1998@gmail.com"  # Your email
        msg['Subject'] = "🧪 MediCare+ Email Test - Real SMTP"
        
        # Create HTML content
        html_content = f"""
        <html>
        <body>
            <h2>🧪 MediCare+ Email Test</h2>
            <p>This is a <strong>REAL EMAIL</strong> sent via Gmail SMTP!</p>
            <p>📧 From: {gmail_email}</p>
            <p>🕐 Sent at: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
            <p>✅ If you receive this, Gmail SMTP is working correctly!</p>
            <hr>
            <p><em>Generated by MediCare+ Email Test Script</em></p>
        </body>
        </html>
        """
        
        msg.attach(MIMEText(html_content, 'html'))
        
        # Send email
        print("🔗 Connecting to Gmail SMTP...")
        context = ssl.create_default_context()
        
        with smtplib.SMTP("smtp.gmail.com", 587) as server:
            print("🔐 Starting TLS...")
            server.starttls(context=context)
            print("🔑 Logging in...")
            server.login(gmail_email, gmail_password)
            print("📧 Sending test email...")
            
            server.sendmail(gmail_email, "gowthaamankrishna1998@gmail.com", msg.as_string())
        
        print("✅ Real email sent successfully!")
        print("📬 Check gowthaamankrishna1998@gmail.com inbox and spam folder")
        return True
        
    except Exception as e:
        print(f"❌ Gmail SMTP error: {e}")
        return False

def test_email_service_module():
    """Test the email service module"""
    
    print("\n📧 Testing Email Service Module")
    print("=" * 50)
    
    try:
        from email_service import email_service
        
        print(f"Email service enabled: {email_service.is_email_enabled()}")
        
        if not email_service.is_email_enabled():
            print("❌ Email service is disabled")
            return False
        
        # Test sending via email service
        test_prediction = {
            "prediction": 25000.0,
            "confidence": 0.85
        }
        
        test_patient_data = {
            "age": 35,
            "bmi": 23.0,
            "gender": "Male",
            "smoker": "No",
            "region": "East",
            "premium_annual_inr": 25000.0
        }
        
        print("📧 Sending via email service...")
        success = email_service.send_prediction_email(
            recipient_email="gowthaamankrishna1998@gmail.com",
            prediction_data=test_prediction,
            patient_data=test_patient_data
        )
        
        if success:
            print("✅ Email service sent successfully!")
            return True
        else:
            print("❌ Email service failed")
            return False
            
    except Exception as e:
        print(f"❌ Email service error: {e}")
        return False

def main():
    """Main test function"""
    
    print("🏥 MediCare+ Real Email Sending Test")
    print("=" * 60)
    
    # Test Gmail SMTP directly
    smtp_success = test_gmail_smtp_directly()
    
    # Test email service module
    service_success = test_email_service_module()
    
    print("\n📊 TEST RESULTS")
    print("=" * 60)
    
    if smtp_success and service_success:
        print("🎉 REAL EMAIL SENDING IS WORKING!")
        print("✅ Gmail SMTP connection successful")
        print("✅ Email service module working")
        print("📬 Check gowthaamankrishna1998@gmail.com for test emails")
        print("\n💡 If frontend shows demo mode, it's a browser extension issue")
    elif smtp_success:
        print("✅ Gmail SMTP works, but email service has issues")
        print("💡 Check email_service.py configuration")
    elif service_success:
        print("✅ Email service works, but SMTP connection failed")
        print("💡 Check Gmail credentials and app password")
    else:
        print("❌ Both tests failed")
        print("💡 Check Gmail configuration and network connection")
    
    print("\n🔧 TROUBLESHOOTING:")
    print("1. Verify Gmail App Password is correct (16 characters)")
    print("2. Check if 2-Factor Authentication is enabled")
    print("3. Ensure 'Less secure app access' is not needed (use App Password)")
    print("4. Check network/firewall blocking SMTP port 587")
    print("5. Try different Gmail account if issues persist")

if __name__ == "__main__":
    main()
